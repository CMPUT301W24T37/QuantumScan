Index: app/src/main/java/com/example/quantumscan/QRCodeGenerator.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.quantumscan;\n\nimport android.graphics.Bitmap;\nimport android.graphics.BitmapFactory;\nimport android.util.Base64;\n\nimport com.google.zxing.BarcodeFormat;\nimport com.google.zxing.WriterException;\nimport com.google.zxing.common.BitMatrix;\nimport com.google.zxing.qrcode.QRCodeWriter;\n\nimport java.io.ByteArrayOutputStream;\n\n// get Bitmap, this Bitmap can be used in imageView.setImageBitmap(bitmap); to display\n// Bitmap qrCodeBitmap = QRCodeHelper.generateQRCodeBitmap(\"sample text\", 250, 250);\n// imageView.setImageBitmap(bitmap)\npublic class QRCodeGenerator {\n    public static Bitmap generateQRCodeBitmap(String text, int width, int height){\n        QRCodeWriter writer = new QRCodeWriter();\n        BitMatrix bitMatrix = null;\n        try {\n            bitMatrix = writer.encode(text, BarcodeFormat.QR_CODE, width, height);\n        } catch (WriterException e) {\n            throw new RuntimeException(e);\n        }\n        Bitmap bitmap = Bitmap.createBitmap(250, 250, Bitmap.Config.RGB_565);\n        for (int x = 0; x < bitMatrix.getWidth(); x++) {\n            for (int y = 0; y < bitMatrix.getHeight(); y++) {\n                bitmap.setPixel(x, y, bitMatrix.get(x, y) ? android.graphics.Color.BLACK : android.graphics.Color.WHITE);\n            }\n        }\n        return bitmap;\n    }\n\n    // transfer bitmap to base64 format, this format can be stored in firestore\n    // String base64Image = QRCodeHelper.bitmapToBase64(qrCodeBitmap);\n    public static String bitmapToBase64(Bitmap bitmap){\n        ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();\n        bitmap.compress(Bitmap.CompressFormat.PNG, 100, byteArrayOutputStream);\n        byte[] byteArray = byteArrayOutputStream.toByteArray();\n        String base64Image = Base64.encodeToString(byteArray, Base64.DEFAULT);\n        return base64Image;\n    }\n\n    // after take base64 string from firestore, this function transfer base64 to bitmap format, then can be displayed.\n    // Bitmap decodedBitmap = QRCodeHelper.base64ToBitmap(base64Image);\n    // imageView.setImageBitmap(bitmap)\n    public static Bitmap base64ToBitmap(String base64Str){\n        byte[] decodedBytes = Base64.decode(base64Str, Base64.DEFAULT);\n        Bitmap bitmap2 = BitmapFactory.decodeByteArray(decodedBytes, 0, decodedBytes.length);\n        return bitmap2;\n    }\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/quantumscan/QRCodeGenerator.java b/app/src/main/java/com/example/quantumscan/QRCodeGenerator.java
--- a/app/src/main/java/com/example/quantumscan/QRCodeGenerator.java	(revision 797c1940dd95195ad533c37f461d131221199653)
+++ b/app/src/main/java/com/example/quantumscan/QRCodeGenerator.java	(date 1709889719046)
@@ -14,6 +14,8 @@
 // get Bitmap, this Bitmap can be used in imageView.setImageBitmap(bitmap); to display
 // Bitmap qrCodeBitmap = QRCodeHelper.generateQRCodeBitmap("sample text", 250, 250);
 // imageView.setImageBitmap(bitmap)
+
+// REFERENCE CODE LINK: https://stackoverflow.com/questions/8800919/how-to-generate-a-qr-code-for-an-android-application
 public class QRCodeGenerator {
     public static Bitmap generateQRCodeBitmap(String text, int width, int height){
         QRCodeWriter writer = new QRCodeWriter();
@@ -34,6 +36,7 @@
 
     // transfer bitmap to base64 format, this format can be stored in firestore
     // String base64Image = QRCodeHelper.bitmapToBase64(qrCodeBitmap);
+    // REFERENCE CODE LINK: https://stackoverflow.com/questions/9224056/android-bitmap-to-base64-string
     public static String bitmapToBase64(Bitmap bitmap){
         ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();
         bitmap.compress(Bitmap.CompressFormat.PNG, 100, byteArrayOutputStream);
@@ -45,6 +48,7 @@
     // after take base64 string from firestore, this function transfer base64 to bitmap format, then can be displayed.
     // Bitmap decodedBitmap = QRCodeHelper.base64ToBitmap(base64Image);
     // imageView.setImageBitmap(bitmap)
+    // REFERENCE CODE LINK: https://stackoverflow.com/questions/4837110/how-to-convert-a-base64-string-into-a-bitmap-image-to-show-it-in-a-imageview
     public static Bitmap base64ToBitmap(String base64Str){
         byte[] decodedBytes = Base64.decode(base64Str, Base64.DEFAULT);
         Bitmap bitmap2 = BitmapFactory.decodeByteArray(decodedBytes, 0, decodedBytes.length);
Index: app/src/main/java/com/example/quantumscan/SelectImage.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.quantumscan;\n\nimport android.app.Activity;\nimport android.content.Intent;\nimport android.graphics.Bitmap;\nimport android.net.Uri;\nimport android.widget.Toast;\n\nimport androidx.activity.result.ActivityResultCallback;\nimport androidx.activity.result.ActivityResultLauncher;\nimport androidx.activity.result.contract.ActivityResultContracts;\n\npublic class SelectImage {\n    private final Activity activity;\n    private final ActivityResultLauncher<Intent> activityResultLauncher;\n\n    public SelectImage(Activity activity, ActivityResultLauncher<Intent> activityResultLauncher) {\n        this.activity = activity;\n        this.activityResultLauncher = activityResultLauncher;\n    }\n\n    public void pickImage() {\n        Intent intent = new Intent(Intent.ACTION_PICK);\n        intent.setType(\"image/*\");\n        activityResultLauncher.launch(intent);\n    }\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/quantumscan/SelectImage.java b/app/src/main/java/com/example/quantumscan/SelectImage.java
--- a/app/src/main/java/com/example/quantumscan/SelectImage.java	(revision 797c1940dd95195ad533c37f461d131221199653)
+++ b/app/src/main/java/com/example/quantumscan/SelectImage.java	(date 1709875657436)
@@ -20,6 +20,7 @@
     }
 
     public void pickImage() {
+
         Intent intent = new Intent(Intent.ACTION_PICK);
         intent.setType("image/*");
         activityResultLauncher.launch(intent);
Index: .idea/deploymentTargetDropDown.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"deploymentTargetDropDown\">\n    <value>\n      <entry key=\"Unnamed\">\n        <State />\n      </entry>\n    </value>\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/deploymentTargetDropDown.xml b/.idea/deploymentTargetDropDown.xml
--- a/.idea/deploymentTargetDropDown.xml	(revision 797c1940dd95195ad533c37f461d131221199653)
+++ b/.idea/deploymentTargetDropDown.xml	(date 1709875818948)
@@ -2,7 +2,7 @@
 <project version="4">
   <component name="deploymentTargetDropDown">
     <value>
-      <entry key="Unnamed">
+      <entry key="app">
         <State />
       </entry>
     </value>
