Index: app/src/main/java/com/example/quantumscan/AttendeeEventPage.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.quantumscan;\r\n\r\n\r\n\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\n\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\n\r\nimport com.google.firebase.firestore.DocumentReference;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.zxing.integration.android.IntentIntegrator;\r\nimport com.google.zxing.integration.android.IntentResult;\r\n\r\nimport java.util.ArrayList;\r\n\r\n/**\r\n * In Attendee_Eventpage.java. Attendee_Eventpage.java you need to create three functions \"View Information\", \"Recive Notification \"Recive Notification\" and \"Scan QR-code\".\r\n * Click View Information to view the event information.\r\n * Click Recive Notification to receive notifications\r\n * Click on Scan QR-code for check in.\r\n */\r\n\r\npublic class AttendeeEventPage extends AppCompatActivity {\r\n\r\n    private FirebaseFirestore db = FirebaseFirestore.getInstance();\r\n    private String eventId; // This should be passed from the previous activity\r\n\r\n    private TextView tvEventTitle;// TextView for displaying event title\r\n\r\n    private TextView tvEventDescription;// TextView for displaying event description\r\n    private ImageView imageViewEventPoster;\r\n\r\n    private FireStoreBridge fireStoreBridge;\r\n\r\n    private Button buttonReturn;\r\n\r\n\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_attendee_eventpage);\r\n\r\n        eventId = getIntent().getStringExtra(\"eventID\");\r\n\r\n        fireStoreBridge = new FireStoreBridge(\"EVENT\");\r\n        View btnViewInfo = findViewById(R.id.btnViewInformation);//Main Activity??or main menu? View Information\r\n\r\n        View btnReceiveNotification = findViewById(R.id.btnReceiveNotification);//Main Activity??or main menu? ReceiveNotification\r\n\r\n        View btnScanQRCode = findViewById(R.id.btnScanQRCode);//Main Activity??or main menu? ScanQRCode\r\n        returnButton = findViewById(R.id.btnReturn);\r\n\r\n        btnViewInfo.setOnClickListener(view -> switchToDetailsView());// Set up the \"View Information\" button\r\n        btnReceiveNotification.setOnClickListener(view -> switchToNotificationView());// Set up the \"ReceiveNotification\" button\r\n        btnScanQRCode.setOnClickListener(view -> switchToScanQRCode());// Set up the \"btnScanQRCode\" button\r\n        returnButton.setOnClickListener(view -> finish());\r\n\r\n        buttonReturn = findViewById(R.id.btnReturn);\r\n\r\n        buttonReturn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                finish(); // 关闭当前活动，返回上一个活动\r\n            }\r\n        });\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    private void switchToDetailsView() { //  This view information interface?or menu connects to each component of textview.xml.\r\n\r\n        setContentView(R.layout.textview);\r\n\r\n        //  findViewById will reference views from textview.xml\r\n        tvEventTitle = findViewById(R.id.tvEventTitle);\r\n        tvEventDescription = findViewById(R.id.tvEventDescription);\r\n        imageViewEventPoster = findViewById(R.id.ivEventBackground);\r\n        Button ivReturn = findViewById(R.id.ivReturn);\r\n        ivReturn.setOnClickListener(v -> switchToMainView()); // Switch back to the main view\r\n\r\n\r\n        fetchEventInformation(eventId);\r\n\r\n    }\r\n\r\n    private void fetchEventInformation(String eventID) {\r\n        // Use FireStoreBridge to retrieve the event\r\n        fireStoreBridge.retrieveEvent(eventID, new FireStoreBridge.OnEventRetrievedListener() {\r\n            @Override\r\n            public void onEventRetrieved(ArrayList<Event> eventList, ArrayList<String> organizerList) {\r\n\r\n                if (!eventList.isEmpty()) {\r\n                    Event event = eventList.get(0);// Assuming the first item is the event we're interested in\r\n                    tvEventTitle = findViewById(R.id.tvEventTitle);\r\n                    tvEventDescription = findViewById(R.id.tvEventDescription);\r\n                    imageViewEventPoster = findViewById(R.id.ivEventBackground);\r\n\r\n                    tvEventTitle.setText(event.getTitle());\r\n                    tvEventDescription.setText(event.getDescription());\r\n                    imageDisplay(eventId, imageViewEventPoster);\r\n\r\n\r\n                } else {\r\n\r\n                    Toast.makeText(AttendeeEventPage.this, \"Event not found.\" + eventID, Toast.LENGTH_SHORT).show();\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    public void imageDisplay(String EventID, ImageView imageView){\r\n        FireStoreBridge fb_events = new FireStoreBridge(\"EVENT\");\r\n        fb_events.displayImage(EventID, imageView);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    private void switchToNotificationView() { //  This receives every component of the notification page/interface/menu? (.xml)\r\n        // Switch to the notification view\r\n        //setContentView(R.layout.notification_view);\r\n\r\n        // Initialize components specific to notification_view.xml\r\n        // Assume you have a return button with the id btnReturnFromNotification\r\n        //Button btnReturnFromNotification = findViewById(R.id.btnReturnFromNotification);\r\n        //btnReturnFromNotification.setOnClickListener(v -> switchToMainView());\r\n\r\n        // Here, you would load and display notification-related information\r\n    }\r\n\r\n\r\n    private void switchToScanQRCode() { //  The page of this connects to every component of theScanQRCode.xml\r\n\r\n    }\r\n\r\n    private void switchToMainView() {\r\n        // Switch back to the main view\r\n        setContentView(R.layout.activity_attendee_eventpage);\r\n        // Re-bind the button since we've switched the layout\r\n        View btnViewInfo = findViewById(R.id.btnViewInformation);\r\n        btnViewInfo.setOnClickListener(view -> switchToDetailsView());\r\n        Button btnReturn = findViewById(R.id.btnReturn);\r\n        btnReturn.setOnClickListener(v -> finish());\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    private void receiveNotification() {\r\n        // Implementation would depend on how you handle notifications.\r\n        // This could involve Firestore listeners for real-time updates or Firebase Cloud Messaging.\r\n    }\r\n\r\n    private void scanQRCodeForCheckIn() {\r\n        IntentIntegrator integrator = new IntentIntegrator(this);\r\n        integrator.setOrientationLocked(false);\r\n        integrator.setBeepEnabled(false);\r\n        integrator.setPrompt(\"Scan QR Code for Check-In\");\r\n        integrator.initiateScan();\r\n    }\r\n\r\n    @Override\r\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n        IntentResult result = IntentIntegrator.parseActivityResult(requestCode, resultCode, data);\r\n        if (result != null && result.getContents() != null) {\r\n            // Handle successful scan\r\n            updateEventCheckInStatus(eventId, true);\r\n        } else {\r\n            Toast.makeText(this, \"Cancelled\", Toast.LENGTH_LONG).show();\r\n        }\r\n    }\r\n\r\n    private void updateEventCheckInStatus(String eventId, boolean isCheckedIn) {\r\n        FirebaseFirestore db = FirebaseFirestore.getInstance();\r\n        DocumentReference eventRef = db.collection(\"events\").document(eventId);\r\n        eventRef.update(\"isCheckedIn\", isCheckedIn)\r\n                .addOnSuccessListener(aVoid -> {\r\n                    Toast.makeText(AttendeeEventPage.this, \"Check-In status updated successfully.\", Toast.LENGTH_SHORT).show();\r\n                })\r\n                .addOnFailureListener(e -> {\r\n                    Toast.makeText(AttendeeEventPage.this, \"Failed to update Check-In status.\", Toast.LENGTH_SHORT).show();\r\n                });\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/quantumscan/AttendeeEventPage.java b/app/src/main/java/com/example/quantumscan/AttendeeEventPage.java
--- a/app/src/main/java/com/example/quantumscan/AttendeeEventPage.java	(revision af4bff91838b71f1d9a6257e2a997cfb7c5deb8c)
+++ b/app/src/main/java/com/example/quantumscan/AttendeeEventPage.java	(date 1712283941417)
@@ -40,10 +40,10 @@
 
     private FireStoreBridge fireStoreBridge;
 
+    private Button returnButton;
     private Button buttonReturn;
 
 
-
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
