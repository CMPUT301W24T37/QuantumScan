Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_2024_3_31_1_13_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024_3_31_1_13_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024_3_31_1_13_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024_3_31_1_13_[Changes]/shelved.patch	(revision 9af9a0963369115b7a397d9870010556ebc85e01)
+++ /dev/null	(revision 9af9a0963369115b7a397d9870010556ebc85e01)
@@ -1,27 +0,0 @@
-Index: app/src/main/java/com/example/quantumscan/AttendeeFragment.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.quantumscan;\r\n\r\nimport android.Manifest;\r\nimport android.content.Intent;\r\nimport android.content.pm.PackageManager;\r\nimport android.os.Bundle;\r\nimport android.provider.Settings;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.AdapterView;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.ListView;\r\nimport android.widget.Toast;\r\nimport androidx.activity.result.ActivityResultLauncher;\r\nimport androidx.activity.result.contract.ActivityResultContracts;\r\nimport androidx.annotation.NonNull;\r\nimport androidx.core.content.ContextCompat;\r\nimport androidx.fragment.app.Fragment;\r\n\r\n\r\n\r\nimport com.google.zxing.integration.android.IntentIntegrator;\r\nimport com.google.zxing.integration.android.IntentResult;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Objects;\r\n\r\npublic class AttendeeFragment extends Fragment {\r\n\r\n    private ActivityResultLauncher<String> requestCameraPermissionLauncher;\r\n    private ActivityResultLauncher<Intent> startForResult;\r\n\r\n    private ListView eventListView;\r\n    //private EventAdapter eventAdapter;\r\n    private ArrayList<Event> events; // Placeholder for your events data\r\n\r\n\r\n    private ArrayAdapter<String> eventAdapter;\r\n    private ArrayList<String> attendeeRole;\r\n    private String id;\r\n    private String UserID;\r\n\r\n    private ArrayList<String> dataList;\r\n    private ArrayList<String> eventIDList;\r\n\r\n\r\n\r\n\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n\r\n        // Initialize the ActivityResultLauncher for camera permission request\r\n        requestCameraPermissionLauncher =\r\n                registerForActivityResult(new ActivityResultContracts.RequestPermission(), isGranted -> {\r\n                    if (isGranted) {\r\n                        startQRCodeScanner();\r\n                    } else {\r\n                        Toast.makeText(getContext(), \"Camera permission is needed to scan QR codes\", Toast.LENGTH_SHORT).show();\r\n                    }\r\n                });\r\n\r\n        // Initialize the ActivityResultLauncher for starting the QR code scanner\r\n        startForResult =\r\n                registerForActivityResult(new ActivityResultContracts.StartActivityForResult(), result -> {\r\n                    IntentResult scanResult = IntentIntegrator.parseActivityResult(result.getResultCode(), result.getData());\r\n                    if (scanResult != null) {\r\n                        if (scanResult.getContents() == null) {\r\n                            Toast.makeText(getContext(), \"Cancelled\", Toast.LENGTH_LONG).show();\r\n                        } else {\r\n                            Toast.makeText(getContext(), \"Scanned: \" + scanResult.getContents(), Toast.LENGTH_LONG).show();\r\n\r\n                            Intent detailIntent = new Intent(getActivity(), EventInformationFragment.class);\r\n                            detailIntent.putExtra(\"eventID\", scanResult.getContents());\r\n                            detailIntent.putExtra(\"userID\", UserID);\r\n                            startActivity(detailIntent);\r\n                        }\r\n                    }\r\n//\r\n\r\n\r\n                });\r\n\r\n        // Initialize your events list here\r\n        events = new ArrayList<>();\r\n\r\n\r\n\r\n    }\r\n\r\n    @Override\r\n    public View onCreateView(@NonNull LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\r\n        View view = inflater.inflate(R.layout.fragment_attendee, container, false);\r\n\r\n        LinearLayout scanQRCodeButton = view.findViewById(R.id.buttonScanQR);\r\n        scanQRCodeButton.setOnClickListener(v -> startQRCodeScanner());\r\n\r\n        eventListView = view.findViewById(R.id.attendeeEventList);\r\n        dataList = new ArrayList<>();\r\n        eventIDList = new ArrayList<>();\r\n\r\n        eventAdapter = new ArrayAdapter<>(view.getContext(), R.layout.event_content, dataList);\r\n\r\n        FireStoreBridge fb = new FireStoreBridge(\"USER\");\r\n        fb.retrieveUser(getCurrentUserId(), new FireStoreBridge.OnUserRetrievedListener() {\r\n            @Override\r\n            public void onUserRetrieved(User user, ArrayList<String> attendeeRoles, ArrayList<String> organizerRoles) {\r\n                for(String event : attendeeRoles){\r\n                    eventIDList.add(event);\r\n                    System.out.println(event);\r\n                }\r\n                System.out.println(user.getId());\r\n                System.out.println(user.getName());\r\n                System.out.println(attendeeRoles.size());\r\n                //System.out.println(attendeeRoles.get(0));\r\n\r\n                FireStoreBridge fb_events = new FireStoreBridge(\"EVENT\");\r\n                fb_events.retrieveAllEvent(new FireStoreBridge.OnEventRetrievedListener() {\r\n                    @Override\r\n                    public void onEventRetrieved(ArrayList<Event> events, ArrayList<String> organizerList) {\r\n                        for(String eventID : eventIDList){\r\n\r\n                            for(Event event: events){\r\n                                if(Objects.equals(eventID, event.getId())){\r\n                                    System.out.println(\"Size\"+ event.getTitle());\r\n                                    dataList.add(event.getTitle());\r\n                                }\r\n                            }\r\n                        }\r\n                        eventAdapter.notifyDataSetChanged();\r\n\r\n                    }\r\n                });\r\n\r\n            }\r\n        });\r\n\r\n        eventListView.setAdapter(eventAdapter);\r\n\r\n\r\n        /**\r\n         跳转到Attendee_Eventpage\r\n         */\r\n\r\n        eventListView.setOnItemClickListener(new AdapterView.OnItemClickListener() {\r\n            @Override\r\n            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {\r\n                String selectedEventName = dataList.get(position);\r\n                String selectedEventID = eventIDList.get(position);\r\n                Intent detailIntent = new Intent(getActivity(), AttendeeEventPage.class);\r\n                detailIntent.putExtra(\"eventID\", selectedEventID);\r\n                detailIntent.putExtra(\"eventName\", selectedEventName);\r\n                startActivity(detailIntent);\r\n            }\r\n        });\r\n\r\n\r\n        return view;\r\n    }\r\n\r\n    private void startQRCodeScanner() {\r\n        if (ContextCompat.checkSelfPermission(getContext(), Manifest.permission.CAMERA) == PackageManager.PERMISSION_GRANTED) {\r\n            IntentIntegrator integrator = new IntentIntegrator(getActivity());\r\n            Intent intent = integrator.createScanIntent();\r\n            startForResult.launch(intent);\r\n        } else {\r\n            requestCameraPermissionLauncher.launch(Manifest.permission.CAMERA);\r\n        }\r\n    }\r\n    private String getCurrentUserId() {\r\n        String userId = Settings.Secure.getString(this.getContext().getContentResolver(), Settings.Secure.ANDROID_ID);\r\n        return userId;\r\n\r\n    }\r\n\r\n\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/quantumscan/AttendeeFragment.java b/app/src/main/java/com/example/quantumscan/AttendeeFragment.java
---- a/app/src/main/java/com/example/quantumscan/AttendeeFragment.java	(revision 7cc6cce02c6bfd86baf005e086186cd9667fb884)
-+++ b/app/src/main/java/com/example/quantumscan/AttendeeFragment.java	(date 1711869203403)
-@@ -114,7 +114,7 @@
-                 System.out.println(user.getId());
-                 System.out.println(user.getName());
-                 System.out.println(attendeeRoles.size());
--                //System.out.println(attendeeRoles.get(0));
-+                System.out.println(attendeeRoles.get(0));
- 
-                 FireStoreBridge fb_events = new FireStoreBridge("EVENT");
-                 fb_events.retrieveAllEvent(new FireStoreBridge.OnEventRetrievedListener() {
-@@ -170,6 +170,7 @@
-         }
-     }
-     private String getCurrentUserId() {
-+
-         String userId = Settings.Secure.getString(this.getContext().getContentResolver(), Settings.Secure.ANDROID_ID);
-         return userId;
- 
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_2024_3_31_1_12_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024_3_31_1_12_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024_3_31_1_12_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024_3_31_1_12_[Changes]/shelved.patch	(revision 9af9a0963369115b7a397d9870010556ebc85e01)
+++ /dev/null	(revision 9af9a0963369115b7a397d9870010556ebc85e01)
@@ -1,22 +0,0 @@
-Index: app/src/main/java/com/example/quantumscan/AttendeeFragment.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.quantumscan;\r\n\r\nimport android.Manifest;\r\nimport android.content.Intent;\r\nimport android.content.pm.PackageManager;\r\nimport android.os.Bundle;\r\nimport android.provider.Settings;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.AdapterView;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.ListView;\r\nimport android.widget.Toast;\r\nimport androidx.activity.result.ActivityResultLauncher;\r\nimport androidx.activity.result.contract.ActivityResultContracts;\r\nimport androidx.annotation.NonNull;\r\nimport androidx.core.content.ContextCompat;\r\nimport androidx.fragment.app.Fragment;\r\n\r\n\r\n\r\nimport com.google.zxing.integration.android.IntentIntegrator;\r\nimport com.google.zxing.integration.android.IntentResult;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Objects;\r\n\r\npublic class AttendeeFragment extends Fragment {\r\n\r\n    private ActivityResultLauncher<String> requestCameraPermissionLauncher;\r\n    private ActivityResultLauncher<Intent> startForResult;\r\n\r\n    private ListView eventListView;\r\n    //private EventAdapter eventAdapter;\r\n    private ArrayList<Event> events; // Placeholder for your events data\r\n\r\n\r\n    private ArrayAdapter<String> eventAdapter;\r\n    private ArrayList<String> attendeeRole;\r\n    private String id;\r\n    private String UserID;\r\n\r\n    private ArrayList<String> dataList;\r\n    private ArrayList<String> eventIDList;\r\n\r\n\r\n\r\n\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n\r\n        // Initialize the ActivityResultLauncher for camera permission request\r\n        requestCameraPermissionLauncher =\r\n                registerForActivityResult(new ActivityResultContracts.RequestPermission(), isGranted -> {\r\n                    if (isGranted) {\r\n                        startQRCodeScanner();\r\n                    } else {\r\n                        Toast.makeText(getContext(), \"Camera permission is needed to scan QR codes\", Toast.LENGTH_SHORT).show();\r\n                    }\r\n                });\r\n\r\n        // Initialize the ActivityResultLauncher for starting the QR code scanner\r\n        startForResult =\r\n                registerForActivityResult(new ActivityResultContracts.StartActivityForResult(), result -> {\r\n                    IntentResult scanResult = IntentIntegrator.parseActivityResult(result.getResultCode(), result.getData());\r\n                    if (scanResult != null) {\r\n                        if (scanResult.getContents() == null) {\r\n                            Toast.makeText(getContext(), \"Cancelled\", Toast.LENGTH_LONG).show();\r\n                        } else {\r\n                            Toast.makeText(getContext(), \"Scanned: \" + scanResult.getContents(), Toast.LENGTH_LONG).show();\r\n\r\n                            Intent detailIntent = new Intent(getActivity(), EventInformationFragment.class);\r\n                            detailIntent.putExtra(\"eventID\", scanResult.getContents());\r\n                            detailIntent.putExtra(\"userID\", UserID);\r\n                            startActivity(detailIntent);\r\n                        }\r\n                    }\r\n//\r\n\r\n\r\n                });\r\n\r\n        // Initialize your events list here\r\n        events = new ArrayList<>();\r\n\r\n\r\n\r\n    }\r\n\r\n    @Override\r\n    public View onCreateView(@NonNull LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\r\n        View view = inflater.inflate(R.layout.fragment_attendee, container, false);\r\n\r\n        LinearLayout scanQRCodeButton = view.findViewById(R.id.buttonScanQR);\r\n        scanQRCodeButton.setOnClickListener(v -> startQRCodeScanner());\r\n\r\n        eventListView = view.findViewById(R.id.attendeeEventList);\r\n        dataList = new ArrayList<>();\r\n        eventIDList = new ArrayList<>();\r\n\r\n        eventAdapter = new ArrayAdapter<>(view.getContext(), R.layout.event_content, dataList);\r\n\r\n        FireStoreBridge fb = new FireStoreBridge(\"USER\");\r\n        fb.retrieveUser(getCurrentUserId(), new FireStoreBridge.OnUserRetrievedListener() {\r\n            @Override\r\n            public void onUserRetrieved(User user, ArrayList<String> attendeeRoles, ArrayList<String> organizerRoles) {\r\n                for(String event : attendeeRoles){\r\n                    eventIDList.add(event);\r\n                    System.out.println(event);\r\n                }\r\n                System.out.println(user.getId());\r\n                System.out.println(user.getName());\r\n                System.out.println(attendeeRoles.size());\r\n                System.out.println(attendeeRoles.get(0));\r\n\r\n                FireStoreBridge fb_events = new FireStoreBridge(\"EVENT\");\r\n                fb_events.retrieveAllEvent(new FireStoreBridge.OnEventRetrievedListener() {\r\n                    @Override\r\n                    public void onEventRetrieved(ArrayList<Event> events, ArrayList<String> organizerList) {\r\n                        for(String eventID : eventIDList){\r\n\r\n                            for(Event event: events){\r\n                                if(Objects.equals(eventID, event.getId())){\r\n                                    System.out.println(\"Size\"+ event.getTitle());\r\n                                    dataList.add(event.getTitle());\r\n                                }\r\n                            }\r\n                        }\r\n                        eventAdapter.notifyDataSetChanged();\r\n\r\n                    }\r\n                });\r\n\r\n            }\r\n        });\r\n\r\n        eventListView.setAdapter(eventAdapter);\r\n\r\n\r\n        /**\r\n         跳转到Attendee_Eventpage\r\n         */\r\n\r\n        eventListView.setOnItemClickListener(new AdapterView.OnItemClickListener() {\r\n            @Override\r\n            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {\r\n                String selectedEventName = dataList.get(position);\r\n                String selectedEventID = eventIDList.get(position);\r\n                Intent detailIntent = new Intent(getActivity(), AttendeeEventPage.class);\r\n                detailIntent.putExtra(\"eventID\", selectedEventID);\r\n                detailIntent.putExtra(\"eventName\", selectedEventName);\r\n                startActivity(detailIntent);\r\n            }\r\n        });\r\n\r\n\r\n        return view;\r\n    }\r\n\r\n    private void startQRCodeScanner() {\r\n        if (ContextCompat.checkSelfPermission(getContext(), Manifest.permission.CAMERA) == PackageManager.PERMISSION_GRANTED) {\r\n            IntentIntegrator integrator = new IntentIntegrator(getActivity());\r\n            Intent intent = integrator.createScanIntent();\r\n            startForResult.launch(intent);\r\n        } else {\r\n            requestCameraPermissionLauncher.launch(Manifest.permission.CAMERA);\r\n        }\r\n    }\r\n    private String getCurrentUserId() {\r\n\r\n        String userId = Settings.Secure.getString(this.getContext().getContentResolver(), Settings.Secure.ANDROID_ID);\r\n        return userId;\r\n\r\n    }\r\n\r\n\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/quantumscan/AttendeeFragment.java b/app/src/main/java/com/example/quantumscan/AttendeeFragment.java
---- a/app/src/main/java/com/example/quantumscan/AttendeeFragment.java	(revision d7788bdd5afca58b49a15f58acfbd70b674eab1b)
-+++ b/app/src/main/java/com/example/quantumscan/AttendeeFragment.java	(date 1711869095225)
-@@ -111,10 +111,7 @@
-                     eventIDList.add(event);
-                     System.out.println(event);
-                 }
--                System.out.println(user.getId());
--                System.out.println(user.getName());
--                System.out.println(attendeeRoles.size());
--                System.out.println(attendeeRoles.get(0));
-+
- 
-                 FireStoreBridge fb_events = new FireStoreBridge("EVENT");
-                 fb_events.retrieveAllEvent(new FireStoreBridge.OnEventRetrievedListener() {
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_2024_3_31_1_12__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024_3_31_1_12__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024_3_31_1_12__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024_3_31_1_12__Changes_.xml	(revision 9af9a0963369115b7a397d9870010556ebc85e01)
+++ /dev/null	(revision 9af9a0963369115b7a397d9870010556ebc85e01)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Checkout_at_2024_3_31_1_12_[Changes]" date="1711869203446" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024_3_31_1_12_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 2024/3/31 1:12 [Changes]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_2024_3_31_1_13__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024_3_31_1_13__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024_3_31_1_13__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024_3_31_1_13__Changes_.xml	(revision 9af9a0963369115b7a397d9870010556ebc85e01)
+++ /dev/null	(revision 9af9a0963369115b7a397d9870010556ebc85e01)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Checkout_at_2024_3_31_1_13_[Changes]" date="1711869235435" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024_3_31_1_13_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 2024/3/31 1:13 [Changes]" />
-</changelist>
\ No newline at end of file
Index: app/src/main/java/com/example/quantumscan/OrganizerEventShare.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.quantumscan;\n\nimport android.Manifest;\nimport android.content.ActivityNotFoundException;\nimport android.content.Intent;\nimport android.content.pm.PackageManager;\nimport android.graphics.Bitmap;\nimport android.net.Uri;\nimport android.os.Bundle;\nimport android.provider.MediaStore;\nimport android.util.Log;\nimport android.view.View;\nimport android.widget.Button;\nimport android.widget.ImageView;\nimport android.widget.TextView;\n\nimport androidx.appcompat.app.AppCompatActivity;\nimport androidx.core.app.ActivityCompat;\n\nimport java.io.ByteArrayOutputStream;\n\npublic class OrganizerEventShare extends AppCompatActivity {\n\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.organizer_event_share);\n        Button backButton = findViewById(R.id.returnButton);\n        ImageView QRcodeView = findViewById(R.id.imageViewQRcode);\n        Button shareButton = findViewById(R.id.shareButton);\n\n        String eventID = getIntent().getStringExtra(\"eventID\");\n\n        Bitmap bitmapQRcode = QRCodeGenerator.generateQRCodeBitmap(eventID,250,250);\n        QRcodeView.setImageBitmap(bitmapQRcode);\n\n        backButton.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                finish();\n            }\n        });\n\n        shareButton.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                if (ActivityCompat.checkSelfPermission(OrganizerEventShare.this, android.Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {\n                    ActivityCompat.requestPermissions(OrganizerEventShare.this, new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE}, 1);\n                } else {\n                    Log.d(\"atmeng\", \"you already have the write external permission!\");\n                    ByteArrayOutputStream bytes = new ByteArrayOutputStream();\n                    bitmapQRcode.compress(Bitmap.CompressFormat.JPEG, 100, bytes);\n                    String path = MediaStore.Images.Media.insertImage(getContentResolver(), bitmapQRcode, \"Title\", \"descr\");\n                    Uri image = Uri.parse(path);\n                    Intent intent = new Intent(Intent.ACTION_SEND, image);\n                    intent.putExtra(Intent.EXTRA_SUBJECT,\"Scan this QR code to signed up or check in the event\");\n                    intent.putExtra(Intent.EXTRA_STREAM, image);\n                    intent.putExtra(Intent.EXTRA_EMAIL, \"\");\n\n                    // Create intent to show chooser\n                    Intent chooser = Intent.createChooser(intent, \"share QR code image\");\n\n                    // Try to invoke the intent.\n                    try {\n                        startActivity(chooser);\n                    } catch (ActivityNotFoundException e) {\n                        // Define what your app should do if no activity can handle the intent.\n                    }\n                }\n\n            }\n        });\n\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/quantumscan/OrganizerEventShare.java b/app/src/main/java/com/example/quantumscan/OrganizerEventShare.java
--- a/app/src/main/java/com/example/quantumscan/OrganizerEventShare.java	(revision 9af9a0963369115b7a397d9870010556ebc85e01)
+++ b/app/src/main/java/com/example/quantumscan/OrganizerEventShare.java	(date 1712512411605)
@@ -43,9 +43,7 @@
         shareButton.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
-                if (ActivityCompat.checkSelfPermission(OrganizerEventShare.this, android.Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {
-                    ActivityCompat.requestPermissions(OrganizerEventShare.this, new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE}, 1);
-                } else {
+
                     Log.d("atmeng", "you already have the write external permission!");
                     ByteArrayOutputStream bytes = new ByteArrayOutputStream();
                     bitmapQRcode.compress(Bitmap.CompressFormat.JPEG, 100, bytes);
@@ -67,7 +65,7 @@
                     }
                 }
 
-            }
+
         });
 
     }
